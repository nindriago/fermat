apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply plugin: 'pmd'

sourceCompatibility = 1.7
targetCompatibility = 1.7
version = '1.0'

repositories {
    mavenCentral()
}

//noinspection GroovyAssignabilityCheck
dependencies {
    /**
     *  For doing the code more readable, please keep the elements in the file sorted alphabetically:
     *  - layer name
     *  - plugin name
     */
    compile project(':fermat-api')
    compile project(':fermat-core-api')
    //Sub App
    //Middleware
    compile project(':fermat-cht-plugin-middleware-chat-bitdubai')
    //Sub App Module
    compile project(':fermat-cht-plugin-sub-app-module-chat-bitdubai')
    compile project(':fermat-cht-plugin-sub-app-module-chat-identity-bitdubai')
    compile project(':fermat-cht-plugin-sub-app-module-chat-actor-community-bitdubai')
    //Identity
    compile project(':fermat-cht-plugin-identity-chat-bitdubai')
    //Network Service
    compile project(':fermat-cht-plugin-network-service-chat-bitdubai')
    //Actor Connection
    compile project(':fermat-cht-plugin-actor-connection-chat-bitdubai')
    //Actor Network Service
    compile project(':fermat-cht-plugin-actor-network-service-chat-bitdubai')
    compile project(':fermat-cht-plugin-sub-app-module-chat-actor-community-bitdubai')
}

pmd {
    toolVersion = '5.1.3'
}

tasks.withType (FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

def jacocoHtmlReport = ""

jacocoTestReport{
    reports{
        jacocoHtmlReport = "Code Coverage HTML Report: file://" + html.destination + "/index.html"
    }
}

task testCoverage(dependsOn: jacocoTestReport) << {
    println jacocoHtmlReport
}

jacocoTestReport.dependsOn clean, test
jacocoTestReport.mustRunAfter test
test.mustRunAfter clean



